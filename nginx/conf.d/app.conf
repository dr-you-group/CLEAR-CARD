# Serve SPA and proxy API under same origin
server {
  listen 80;
  server_name _;

  # Root points to the React build (mounted as volume/ copied at build)
  root /usr/share/nginx/html;
  index index.html;

  # Health endpoint
  location = /healthz {
    add_header Content-Type text/plain;
    return 200 "ok\n";
  }

  # API proxy to Spring
  location /api/ {
    rewrite ^/api/(.*)$ /$1 break;
    
    proxy_pass         http://spring:8080;
    proxy_http_version 1.1;
    proxy_set_header   Host              $host;
    proxy_set_header   X-Real-IP         $remote_addr;
    proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto $scheme;
    proxy_connect_timeout 5s;
    proxy_read_timeout    300s;  # allow long downloads
    client_max_body_size  50m;
  }

  # (Optional) direct downloads if you expose them under /download or /files
  location /download/ {
    proxy_pass http://spring:8080/download/;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
  }
  location /files/ {
    proxy_pass http://spring:8080/files/;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
  }

  # Cache immutable static assets by extension
  location ~* \.(?:js|mjs|css|svg|png|jpg|jpeg|gif|ico|woff2?)$ {
    try_files $uri =404;
    add_header Cache-Control "public, max-age=31536000, immutable";
  }

  # Viteâ€™s hashed assets in /assets
  location /assets/ {
    try_files $uri =404;
    add_header Cache-Control "public, max-age=31536000, immutable";
  }

  # SPA fallback: send everything else to index.html
  location / {
    try_files $uri /index.html;
  }
}
